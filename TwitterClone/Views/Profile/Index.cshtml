﻿@model IEnumerable<TwitterClone.Models.Tweet>
@{
    ViewBag.Title = "Home Page";
}
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>

<style>
    .profileImg {
        width: 60%;
        border: 1px solid;
        border-radius: 10rem;
        object-fit: cover;
        border-color: #D8DEE2;
    }

    #ProfiliDuzenle {
        background-color: white;
        width: 50%;
        border-radius: 20px;
        font-weight: 600;
        border-color: #D8DEE2;
        margin-left: 30px;
    }

    #name {
        font-size: xx-large
    }

    #link {
        color: gray;
        margin-top: -10px;
    }

    #Takip {
        font-size: small;
    }

    .container {
        margin: 20px;
    }

    hr {
        width: 80%;
    }
</style>

<div class="container">
    <div class="row">
        <div class="col">
            <img class="profileImg" src="~/Images/XLogo.png" />
        </div>
        <div class="col">
            <button type="button" class="btn" id="ProfiliDuzenle">Profili Düzenle</button>
        </div>
    </div>
    <br />
    <div>
        <h5 id="name">@Session["UserName"].ToString()</h5>
        <p id="link">@@@Session["UserLink"].ToString()</p>
    </div>
    <div>
        @if (Session["UserDescription"] == null)
        {
            <p id="description"></p>
        }
        else
        {
            <p id="description">@Session["UserDescription"].ToString()</p>
        }

        <p id="Takip"> 80 Takip Edilen  180 Takipçi</p>
    </div>
    <hr />
    <div id="tweetContainer">

    </div>
</div>


<script>
    moment.locale("TR-tr");
    $(document).ready(function () {
        userId = @ViewBag.UserId;
        getAllTweets();
        function getAllTweets() {
            $.ajax({
                url: `/api/user/${userId}`,
                type: "GET",
                dataType: "json",
                success: function (data) {
                    displayTweets(data);
                },
                error: function (error) {
                    console.log("Tweetleri getirirken bir hata oluştu:", error);
                }
            });
        }

        function displayTweets(tweets) {
            var tweetContainer = $("#tweetContainer");
            tweets.forEach(function (tweet) {
                var tweetTime = moment(tweet.TweetTime);
                var tweetHtml = `
            <div class="card">
                <h6 class="card-header">
                    <img class="profile-img" src="${tweet.User.UserImg}" />
                    ${tweet.User.UserName}
                    <span style="color:darkgray">@@${tweet.User.UserLink} - ${formatTweetTime(tweetTime)} </span>
                    <button class="btn delete-button" data-toggle="modal" data-target="#DeleteConfirmation" onclick="deleteClick(${tweet.TweetId})" data-tweetid="${tweet.TweetId}">
                    <i class="bi bi-trash"></i>
                    </button>
                </h6>
                <div class="card-body">
                    <p class="card-text">${tweet.TweetContent}</p>
                    <div class="container baslik text-center">
                        <div class="row icons">
                            <div class="col">
                                <i class="bi bi-chat tweet-icon"> 8</i>
                            </div>
                            <div class="col">
                                <i class="bi bi-arrow-repeat tweet-icon"> 100</i>
                            </div>
                            <div class="col">
                                <i class="bi bi-heart tweet-icon"> 300</i>
                            </div>
                            <div class="col">
                                <i class="bi bi-bar-chart-line tweet-icon"> 7k</i>
                            </div>
                            <div class="col">
                                <i class="bi bi-upload"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        `;

                tweetContainer.prepend(tweetHtml);
            });
        }

        function formatTweetTime(tweetTime) {
            var now = moment();
            var diffSecond = now.diff(tweetTime, 'second')
            var diffMinutes = now.diff(tweetTime, 'minutes');
            var diffHours = now.diff(tweetTime, 'hours');

            if (diffSecond < 60) {
                return diffSecond + 'sn'
            }
            else if (diffMinutes < 60) {
                return diffMinutes + 'd';
            } else if (diffHours < 24) {
                return diffHours + 's';
            } else {
                return tweetTime.format('D MMM');
            }
        }

        function deleteProduct(TweetId) {
            $('#DeleteConfirmation').modal('show');

            $('#ConfirmDelete').on('click', function () {
                $.ajax({
                    url: "/Home/DeleteTweet/" + TweetId,
                    type: "DELETE",
                    contentType: "application/json",
                    success: function (data) {
                        console.log('Success:', data);
                        $('#DeleteConfirmation').modal('hide');
                        location.reload();
                    },
                    error: function (error) {
                        console.log('Error:', error);
                        alert('Error deleting tweet.');
                    }
                });
            });
        }


        $(document).on('click', '.delete-button', function () {
            var tweetId = $(this).data('tweetid');
            deleteProduct(tweetId);
        });

    });

</script>



